networks:
  frontend:
  backend:


volumes:
  pgdata:
  opdata:


x-op-restart-policy: &restart_policy
  restart: unless-stopped
x-op-image: &image
  image: openproject/openproject:${TAG:-14-slim}
x-op-app: &app
  <<: [ *image, *restart_policy ]
  environment:
    OPENPROJECT_HTTPS: "${OPENPROJECT_HTTPS:-true}"
    OPENPROJECT_HOST__NAME: "${OPENPROJECT_HOST__NAME:-localhost:8080}"
    OPENPROJECT_HSTS: "${OPENPROJECT_HSTS:-true}"
    RAILS_CACHE_STORE: "memcache"
    OPENPROJECT_CACHE__MEMCACHE__SERVER: "cache:11211"
    OPENPROJECT_RAILS__RELATIVE__URL__ROOT: "${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}"
    DATABASE_URL: "${DATABASE_URL:-postgres://postgres:p4ssw0rd@db/openproject?pool=20&encoding=unicode&reconnect=true}"
    RAILS_MIN_THREADS: ${RAILS_MIN_THREADS:-4}
    RAILS_MAX_THREADS: ${RAILS_MAX_THREADS:-16}
    # set to true to enable the email receiving feature. See ./docker/cron for more options
    IMAP_ENABLED: "${IMAP_ENABLED:-false}"
  volumes:
    - "${OPDATA:-opdata}:/var/openproject/assets"

services:
  db:
    image: postgres:13
    <<: *restart_policy
    stop_grace_period: "3s"
    volumes:
      - "${PGDATA:-pgdata}:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-p4ssw0rd}
      POSTGRES_DB: openproject
    networks:
      - backend

  cache:
    image: memcached
    <<: *restart_policy
    networks:
      - backend

  proxy:
    build:
      context: ./proxy
      args:
        APP_HOST: web
    image: openproject/proxy
    <<: *restart_policy
    ports:
      - "${PORT:-8080}:80"
    depends_on:
      - web
    networks:
      - frontend

  smtp4dev:
    image: rnwood/smtp4dev
    networks:
      - frontend
      - backend
    ports:
      - '8090:80'
      - '2525:25'
      - '143:143'
    environment:
      - ServerOptions__TlsMode=None
      # - ServerOptions__TlsMode=StartTls
      - ServerOptions__Hostname=smtp4dev
      # - ServerOptions__TlsCertificate=/selfsigned-certificate.cer
      - ServerOptions__ImapPort=143
      - ServerOptions__AuthenticationRequired=true
      - ServerOptions__SmtpAllowAnyCredentials=false
      - ServerOptions__SmtpEnabledAuthTypesWhenNotSecureConnection="PLAIN,LOGIN,CRAM-MD5"
      - ServerOptions__SmtpEnabledAuthTypesWhenSecureConnection="PLAIN,LOGIN,CRAM-MD5"
      - ServerOptions__SecureConnectionRequired=false
      - ServerOptions__Users__0__Username=openproject
      - ServerOptions__Users__0__Password=openproject
      - ServerOptions__Users__0__DefaultMailbox=openproject
      - ServerOptions__Mailboxes__0__Name=openproject
      - ServerOptions__Mailboxes__0__Recipients=openproject@aspenmfg.com
      # volumes:
      # - ./.smtp4dev/selfsigned-certificate.cer:/selfsigned-certificate.cer

  web:
    <<: *app
    command: "./docker/prod/web"
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - cache
      - seeder
    labels:
      - autoheal=true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}/health_checks/default" ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    volumes:
      - ./enterprise_token.rb:/app/app/models/enterprise_token.rb:ro
      - ./.smtp4dev/selfsigned-certificate.cer:/usr/local/share/ca-certificates/selfsigned-ceritificate.cer

  autoheal:
    image: willfarrell/autoheal:1.2.0
    volumes:
      - "./var/run/docker.sock:/var/run/docker.sock"
    environment:
      AUTOHEAL_CONTAINER_LABEL: autoheal
      AUTOHEAL_START_PERIOD: 600
      AUTOHEAL_INTERVAL: 30

  worker:
    <<: *app
    command: "./docker/prod/worker"
    networks:
      - backend
    depends_on:
      - db
      - cache
      - seeder

  cron:
    <<: *app
    command: "./docker/prod/cron"
    networks:
      - backend
    environment:
      IMAP_HOST: ${IMAP_HOST}
      IMAP_USERNAME: ${IMAP_USERNAME}
      IMAP_PASSWORD: ${IMAP_PASSWORD}
      IMAP_PORT: ${IMAP_PORT}
      IMAP_SSL: ${IMAP_SSL}
      IMAP_FOLDER: ${IMAP_FOLDER}
      IMAP_MOVE_ON_SUCCESS: ${IMAP_MOVE_ON_SUCCESS}
      IMAP_MOVE_ON_FAILURE: ${IMAP_MOVE_ON_FAILURE}
      IMAP_SSL_VERIFICATION: ${IMAP_SSL_VERIFICATION}
      IMAP_CHECK_INTERVAL: ${IMAP_CHECK_INTERVAL}
    # volumes: # - ./.smtp4dev/selfsigned-certificate.cer:/usr/local/share/ca-certificates/selfsigned-ceritificate.cer
    depends_on:
      - db
      - cache
      - seeder
      - smtp4dev

  seeder:
    <<: *app
    command: "./docker/prod/seeder"
    restart: on-failure
    networks:
      - backend
